# load packages
library(tidyverse)
library(zoo)
# read in stanford cases
stanf <- read_csv("stanford_cases.csv")
# read in santa clara county cases
sc <- read_csv("sc_cases.csv")
# read in Cali cases
url <- url("https://covidtracking.com/api/states/daily.csv")
covid <- read_csv(url)
covid_ca <- covid %>% dplyr::filter(state == "CA") %>% arrange(date)
# process sc cases for graphs
sc_to_graph <- sc %>% select(date, tested_ind, positive_ind, negative_ind) %>%
mutate(tested_sc = as.numeric(tested_ind),
positive_sc = as.numeric(positive_ind),
negative_sc = as.numeric(negative_ind)) %>%
select(-c(tested_ind, positive_ind, negative_ind)) %>%
mutate_all(~replace(., is.na(.), 0))
# process sc cases for graphs
sc_to_graph <- sc %>% select(date, tested_ind, positive_ind, negative_ind) %>%
mutate(tested_sc = as.numeric(tested_ind),
positive_sc = as.numeric(positive_ind),
negative_sc = as.numeric(negative_ind)) %>%
select(-c(tested_ind, positive_ind, negative_ind)) %>%
mutate_all(~replace(., is.na(.), 0))
# process stanford for graphs
stanf_to_graph <- stanf %>% select(date, UniquePatients, UniquePositive, UniqueNegative) %>%
rename(
tested_stanf = unique_patients,
positive_stanf = unique_positive,
negative_stanf = unique_negative
)
# process stanford for graphs
stanf_to_graph <- stanf %>% select(Date, UniquePatients, UniquePositive, UniqueNegative) %>%
rename(
tested_stanf = unique_patients,
positive_stanf = unique_positive,
negative_stanf = unique_negative
)
# process stanford for graphs
stanf_to_graph <- stanf %>% select(Date, UniquePatients, UniquePositive, UniqueNegative) %>%
rename(
tested_stanf = UniquePatients,
positive_stanf = UniquePositive,
negative_stanf = UniqueNegative
)
# change date format
sc_to_graph$date <- as.Date(sc_to_graph$date, "%m/%d/%y")
stanf_to_graph$date <- as.Date(stanf_to_graph$date, "%m/%d/%y")
# process stanford for graphs
stanf_to_graph <- stanf %>% select(Date, UniquePatients, UniquePositive, UniqueNegative) %>%
rename(
date = Date,
tested_stanf = UniquePatients,
positive_stanf = UniquePositive,
negative_stanf = UniqueNegative
)
# change date format
sc_to_graph$date <- as.Date(sc_to_graph$date, "%m/%d/%y")
stanf_to_graph$date <- as.Date(stanf_to_graph$date, "%m/%d/%y")
library(zoo)
# read in stanford cases
stanf <- read_csv("stanford_cases.csv")
# read in santa clara county cases
sc <- read_csv("sc_cases.csv")
# read in Cali cases
url <- url("https://covidtracking.com/api/states/daily.csv")
covid <- read_csv(url)
covid_ca <- covid %>% dplyr::filter(state == "CA") %>% arrange(date)
# process sc cases for graphs
sc_to_graph <- sc %>% select(date, tested_ind, positive_ind, negative_ind) %>%
mutate(tested_sc = as.numeric(tested_ind),
positive_sc = as.numeric(positive_ind),
negative_sc = as.numeric(negative_ind)) %>%
select(-c(tested_ind, positive_ind, negative_ind)) %>%
mutate_all(~replace(., is.na(.), 0))
# process stanford for graphs
stanf_to_graph <- stanf %>% select(Date, UniquePatients, UniquePositive, UniqueNegative) %>%
rename(
date = Date,
tested_stanf = UniquePatients,
positive_stanf = UniquePositive,
negative_stanf = UniqueNegative
)
# change date format
sc_to_graph$date <- as.Date(sc_to_graph$date, "%m/%d/%y")
stanf_to_graph$date <- as.Date(stanf_to_graph$date, "%m/%d/%y")
# a lot of data here, so just drop what we wont end up using
covid_ca <- covid_ca %>% dplyr::filter(dateChecked >= as.Date("2020-03-01")) %>%
select(negativeIncrease, positiveIncrease, totalTestResultsIncrease, dateChecked) %>%
mutate(dateChecked = as.Date(dateChecked)) %>%
rename(negative_ca = negativeIncrease, # rename for consistency
positive_ca = positiveIncrease,
tested_ca = totalTestResultsIncrease,
date = dateChecked
)
# join all three
to_graph <- stanf_to_graph %>%
merge(sc_to_graph, by = "date") %>%
merge(covid_ca, by = "date") %>%
dplyr::filter(date < as.Date("2020-05-26")) # drop most recent obs, as likely not fully reported
#######################################
# Plots
#######################################
# Note: plots were produced on a 27 inch screen, so sizing may be off on laptop
# define color palatte
black <- "#2E2D29"
cardinal <- "#B1040E"
yellow <- "#EAAB00"
## Graph 1.
## Percent Tests Positive at Stanford, SCC, Cali
to_graph %>%
mutate(
perc_rate_stanf =100*positive_stanf/tested_stanf,
roll_avg_stanf = zoo::rollmean(perc_rate_stanf, 7, na.pad = T),
perc_rate_sc =100*positive_sc/tested_sc,
roll_avg_sc = zoo::rollmean(perc_rate_sc, 7, na.pad = T),
perc_rate_ca =100*positive_ca/tested_ca,
roll_avg_ca = zoo::rollmean(perc_rate_ca, 7, na.pad = T)
) %>%
pivot_longer(c(perc_rate_stanf, perc_rate_sc, roll_avg_sc, roll_avg_stanf, perc_rate_ca, roll_avg_ca),
names_to = "name", values_to = "val") %>%
mutate(
loc = ifelse(str_detect(name, "stanf"), "Stanford", ifelse(str_detect(name, "sc"), "Santa Clara", "Cali")),
emph = ifelse(substr(name, 1, 8) == "roll_avg", "b", "s")
) %>%
dplyr::filter(name != "perc_rate_ca") %>%
ggplot(aes(
x = date, y = val, color = loc, linetype = as.factor(emph),
alpha = as.factor(emph),size = as.factor(emph),
))+
geom_line()+
geom_hline(yintercept = 10, lty = 2)+
annotate(geom = "text", x = as.Date('2020-05-15'), y = 12, label = "CDC Benchmark", size = 8)+
scale_colour_manual(values = c(yellow, black, cardinal),
labels = c("California", "Santa Clara", "Stanford")
)+
scale_size_manual(values = c(1.5, 0.5), guide="none")+
scale_alpha_manual(values = c(1, 0.8), guide="none")+
scale_linetype_manual(values = c("solid", "dashed"),
labels = c("Weekly Average", "Daily Amount"))+
labs(title = "Stanford & Santa Clara Percent Tests Positive",
x  = "Date (daily)",
y = "Percent",
linetype = "Type",
caption = "Source: Stanford Medicine, Santa Clara County, California Dept. of Public Health \n BENJAMIN WITTENBRINK/The Stanford Daily",
color = "Location"
)+
theme_minimal()+
theme(text = element_text(size=30),
plot.title= element_text(hjust = 0.5, family = "serif"),
legend.text = element_text(size = 20),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
legend.box.margin = margin(l = 5, b = 5, r =5, t = 5),
plot.caption = element_text(size = 15),
legend.position=c(.85, .5)
)+
guides(color = guide_legend(order = 1),
linetype = guide_legend(order = 2))
# load packages
library(tidyverse)
library(zoo)
# read in stanford cases
stanf <- read_csv("stanford_cases.csv")
# read in santa clara county cases
sc <- read_csv("sc_cases.csv")
# read in Cali cases
url <- url("https://covidtracking.com/api/states/daily.csv")
covid <- read_csv(url)
covid_ca <- covid %>% dplyr::filter(state == "CA") %>% arrange(date)
# process sc cases for graphs
sc_to_graph <- sc %>% select(date, tested_ind, positive_ind, negative_ind) %>%
mutate(tested_sc = as.numeric(tested_ind),
positive_sc = as.numeric(positive_ind),
negative_sc = as.numeric(negative_ind)) %>%
select(-c(tested_ind, positive_ind, negative_ind)) %>%
mutate_all(~replace(., is.na(.), 0))
# process stanford for graphs
stanf_to_graph <- stanf %>% select(Date, UniquePatients, UniquePositive, UniqueNegative) %>%
rename(
date = Date,
tested_stanf = UniquePatients,
positive_stanf = UniquePositive,
negative_stanf = UniqueNegative
)
# change date format
sc_to_graph$date <- as.Date(sc_to_graph$date, "%m/%d/%y")
stanf_to_graph$date <- as.Date(stanf_to_graph$date, "%m/%d/%y")
# a lot of data here, so just drop what we wont end up using
covid_ca <- covid_ca %>% dplyr::filter(dateChecked >= as.Date("2020-03-01")) %>%
select(negativeIncrease, positiveIncrease, totalTestResultsIncrease, dateChecked) %>%
mutate(dateChecked = as.Date(dateChecked)) %>%
rename(negative_ca = negativeIncrease, # rename for consistency
positive_ca = positiveIncrease,
tested_ca = totalTestResultsIncrease,
date = dateChecked
)
# join all three
to_graph <- stanf_to_graph %>%
merge(sc_to_graph, by = "date") %>%
merge(covid_ca, by = "date") %>%
dplyr::filter(date < as.Date("2020-05-26")) # drop most recent obs, as likely not fully reported
#######################################
# Plots
#######################################
# Note: plots were produced on a 27 inch screen, so sizing may be off on laptop
# define color palatte
black <- "#2E2D29"
cardinal <- "#B1040E"
yellow <- "#EAAB00"
## Graph 1.
## Percent Tests Positive at Stanford, SCC, Cali
to_graph %>%
mutate(
perc_rate_stanf =100*positive_stanf/tested_stanf,
roll_avg_stanf = zoo::rollmean(perc_rate_stanf, 7, na.pad = T),
perc_rate_sc =100*positive_sc/tested_sc,
roll_avg_sc = zoo::rollmean(perc_rate_sc, 7, na.pad = T),
perc_rate_ca =100*positive_ca/tested_ca,
roll_avg_ca = zoo::rollmean(perc_rate_ca, 7, na.pad = T)
) %>%
pivot_longer(c(perc_rate_stanf, perc_rate_sc, roll_avg_sc, roll_avg_stanf, perc_rate_ca, roll_avg_ca),
names_to = "name", values_to = "val") %>%
mutate(
loc = ifelse(str_detect(name, "stanf"), "Stanford", ifelse(str_detect(name, "sc"), "Santa Clara County", "Cali")),
emph = ifelse(substr(name, 1, 8) == "roll_avg", "b", "s")
) %>%
dplyr::filter(name != "perc_rate_ca") %>%
ggplot(aes(
x = date, y = val, color = loc, linetype = as.factor(emph),
alpha = as.factor(emph),size = as.factor(emph),
))+
geom_line()+
geom_hline(yintercept = 10, lty = 2)+
annotate(geom = "text", x = as.Date('2020-05-15'), y = 12, label = "CDC Benchmark", size = 8)+
scale_colour_manual(values = c(yellow, black, cardinal),
labels = c("California", "Santa Clara County", "Stanford")
)+
scale_size_manual(values = c(1.5, 0.5), guide="none")+
scale_alpha_manual(values = c(1, 0.8), guide="none")+
scale_linetype_manual(values = c("solid", "dashed"),
labels = c("Weekly Average", "Daily Amount"))+
labs(title = "Stanford & Santa Clara County Percent Tests Positive",
x  = "Date (daily)",
y = "Percent",
linetype = "Type",
caption = "Source: Stanford Medicine, Santa Clara County, California Dept. of Public Health \n BENJAMIN WITTENBRINK/The Stanford Daily",
color = "Location"
)+
theme_minimal()+
theme(text = element_text(size=30),
plot.title= element_text(hjust = 0.5, family = "serif"),
legend.text = element_text(size = 20),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
legend.box.margin = margin(l = 5, b = 5, r =5, t = 5),
plot.caption = element_text(size = 15),
legend.position=c(.85, .5)
)+
guides(color = guide_legend(order = 1),
linetype = guide_legend(order = 2))
## Graph 1.
## Percent Tests Positive at Stanford, SCC, Cali
to_graph %>%
mutate(
perc_rate_stanf =100*positive_stanf/tested_stanf,
roll_avg_stanf = zoo::rollmean(perc_rate_stanf, 7, na.pad = T),
perc_rate_sc =100*positive_sc/tested_sc,
roll_avg_sc = zoo::rollmean(perc_rate_sc, 7, na.pad = T),
perc_rate_ca =100*positive_ca/tested_ca,
roll_avg_ca = zoo::rollmean(perc_rate_ca, 7, na.pad = T)
) %>%
pivot_longer(c(perc_rate_stanf, perc_rate_sc, roll_avg_sc, roll_avg_stanf, perc_rate_ca, roll_avg_ca),
names_to = "name", values_to = "val") %>%
mutate(
loc = ifelse(str_detect(name, "stanf"), "Stanford", ifelse(str_detect(name, "sc"), "Santa Clara County", "Cali")),
emph = ifelse(substr(name, 1, 8) == "roll_avg", "b", "s")
) %>%
dplyr::filter(name != "perc_rate_ca") %>%
ggplot(aes(
x = date, y = val, color = loc, linetype = as.factor(emph),
alpha = as.factor(emph),size = as.factor(emph),
))+
geom_line()+
geom_hline(yintercept = 10, lty = 2)+
annotate(geom = "text", x = as.Date('2020-05-15'), y = 12, label = "CDC Benchmark", size = 8)+
scale_colour_manual(values = c(yellow, black, cardinal),
labels = c("California", "Santa Clara County", "Stanford")
)+
scale_size_manual(values = c(1.5, 0.5), guide="none")+
scale_alpha_manual(values = c(1, 0.8), guide="none")+
scale_linetype_manual(values = c("solid", "dashed"),
labels = c("Weekly Average", "Daily Amount"))+
labs(title = "Stanford & Santa Clara County Percent Tests Positive",
x  = "Date (daily)",
y = "Percent",
linetype = "Type",
caption = "Source: Stanford Medicine, Santa Clara County, California Dept. of Public Health \n BENJAMIN WITTENBRINK/The Stanford Daily",
color = "Location"
)+
theme_minimal()+
theme(text = element_text(size=30),
plot.title= element_text(hjust = 0.5, family = "serif"),
legend.text = element_text(size = 20),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
legend.box.margin = margin(l = 5, b = 5, r =5, t = 5),
plot.caption = element_text(size = 15),
legend.position=c(.85, .5)
)+
guides(color = guide_legend(order = 1),
linetype = guide_legend(order = 2))
## Graph 2.
## Positive Tests at Stanford/SC
to_graph %>% select(date, positive_stanf, positive_sc) %>%
mutate(
avg_stanf = zoo::rollmean(positive_stanf, 7, na.pad = T),
avg_sc = zoo::rollmean(positive_sc, 7, na.pad = T)
) %>%
pivot_longer(c(positive_stanf, positive_sc, avg_stanf, avg_sc),
names_to = "place", values_to = "positive") %>%
mutate(loc = ifelse(str_detect(place, "stanf"), "Stanford", "Santa Clara County"),
avg = ifelse(substr(place, 1, 3) == "avg", 1, 0)) %>%
ggplot(aes(
x = date, y = as.integer(positive), color = loc,
linetype = as.factor(avg), alpha = as.factor(avg), size = as.factor(avg)
))+
geom_line()+
ylim(0, 100)+
scale_colour_manual(values = c(black, cardinal),
labels = c("Santa Clara County", "Stanford"))+
scale_size_manual(values = c(1, 2), guide="none")+
scale_alpha_manual(values = c(0.8, 1), guide = "none")+
scale_linetype_manual(values = c("dashed", "solid"),
labels = c("Daily Amount","Weekly Average"))+
labs(
title = "Daily COVID-19 Positive Cases ",
x  = "Date (daily)",
y = "# Positive",
color = "Location",
linetype = "Type",
caption = "Source: Stanford Medicine, Santa Clara County Public Health \n BENJAMIN WITTENBRINK/The Stanford Daily"
)+
theme_minimal()+
theme(text=element_text(size=30, family = 'serif'),
plot.title= element_text(hjust = 0.5),
legend.text = element_text(size = 20),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
legend.box.margin = margin(l = 5, b = 5, t = 5, r = 5),
legend.position=c(.85, .75),
plot.caption = element_text(size = 15)
)+
guides(color = guide_legend(order = 1),
linetype = guide_legend(order = 2))
## Graph 3.
## Total Tests at Stanford/SC
to_graph %>% select(date, tested_stanf, tested_sc) %>%
mutate(
avg_stanf = zoo::rollmean(tested_stanf, 7, na.pad = T),
avg_sc = zoo::rollmean(tested_sc, 7, na.pad = T)
) %>%
pivot_longer(c(tested_stanf, tested_sc, avg_stanf, avg_sc),
names_to = "place", values_to = "tested") %>%
mutate(loc = ifelse(str_detect(place, "stanf"), "Stanford", "Santa Clara County"),
avg = ifelse(substr(place, 1, 3) == "avg", 1, 0)) %>%
ggplot(aes(
x = date, y = as.integer(tested), color = loc,
linetype = as.factor(avg), alpha = as.factor(avg), size = as.factor(avg)
))+
geom_line()+
scale_colour_manual(values = c(black, cardinal),
labels = c("Santa Clara County", "Stanford"))+
scale_size_manual(values = c(1, 2), guide="none")+
scale_alpha_manual(values = c(0.8, 1), guide = "none")+
scale_linetype_manual(values = c("dashed", "solid"),
labels = c("Daily Amount","Weekly Average"))+
labs(
title = "Daily COVID-19 Tested Cases ",
x  = "Date (daily)",
y = "# Tested",
color = "Location",
linetype = "Type",
caption = "Source: Stanford Medicine, Santa Clara County Public Health  \n BENJAMIN WITTENBRINK/The Stanford Daily"
)+
theme_minimal()+
theme(text=element_text(size=30, family = 'serif'),
plot.title= element_text(hjust = 0.5),
legend.text = element_text(size = 20),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
legend.box.margin = margin(l = 5, b = 5, t = 5, r =5),
legend.position=c(.15, .7),
plot.caption = element_text(size = 15)
)+
guides(color = guide_legend(order = 1), linetype = guide_legend(order = 2))
## Graph 4.
## Positive tests daily California
to_graph %>% mutate(roll_avg = zoo::rollmean(positive_ca, 7, na.pad = T)) %>%
pivot_longer(c(roll_avg, positive_ca), names_to = "nam", values_to = "val") %>%
mutate(emph = ifelse(nam == "roll_avg", "bold", "not bold")) %>%
ggplot(aes(x = date, y = val, color = nam, size = as.factor(emph), alpha = as.factor(emph)))+
geom_line()+
scale_colour_manual(values = c( "#2E2D29", "#EAAB00"), labels = c("Percent Rate", "Rolling Average"))+
scale_size_manual( values = c(2, 0.5), guide="none")+
scale_alpha_manual(values = c(1, 0.5), guide="none")+
theme_minimal()+
labs(title = "Daily California Positive Tests",
x  = "Date (daily)",
y = "# Positive",
caption = "Source: California Department of Public Health \n BENJAMIN WITTENBRINK/The Stanford Daily",
color = "Legend"
)+
theme(text = element_text(size=30),
plot.title= element_text(hjust = 0.5, family = "serif"),
legend.text = element_text(size = 20),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"),
legend.box.margin = margin(l = 5, b = 5, r = 5, t = 5),
legend.position=c(.85, .3),
plot.caption = element_text(size = 15)
)
